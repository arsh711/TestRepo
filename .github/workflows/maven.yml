# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test result status

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        
    - name: Download Google Chrome 
      run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 
      
    - name: install downloaded package
      run: sudo dpkg -i google-chrome-stable_current_amd64.deb
      
    - name: Build with Maven
      run: mvn clean test -Dcucumber.options="--tags @ValidLogin" 
      
    - name: zip allure results 
      run: cd target && zip -r allure-results.zip allure-results
      
    - name: Upload Allure results
      uses: actions/upload-artifact@v3.1.1
      with:
        name: Allure Results
        path: target/allure-results.zip
      
    - name: Cache maven dependencies
      uses: actions/cache@v3
      with:
        key: maven
        path: ~/.m2

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
